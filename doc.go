// Package rockset provides a go client to interact with the the online Rockset database.
//
// Uses the REST API https://docs.rockset.com/rest-api/ using an OpenAPI client,
// generated by the https://openapi-generator.tech/.
//
// It provides some convenience functions to make the generated client easier to use,
// by wrapping common API calls in methods that require passing a context.Context and having
// all required arguments in the method signature, and using functional options for any
// optional arguments. They return the payload data from the models package, to reduce the
// indirection.
//
// For example
//
//   c, err := client.GetCollection(ctx, "commons", "_events")
//
// as opposed to the "raw" way of using the generated client code
//
//   // both workspace and collection are required arguments
//   p := collections.NewGetCollectionParams()
//   p.Workspace = "commons"
//   p.Collection = "_events"
//   p.Context = ctx
//   r, err := client.Collections.GetCollection(p)
//
// If you set a zerolog logger in the context, many of the methods will log to it. E.g.
//
//   ctx := context.Background()
//   console := zerolog.ConsoleWriter{Out: os.Stderr, TimeFormat: time.RFC3339}
//   log := zerolog.New(console).Level(zerolog.TraceLevel).With().Timestamp().Logger()
//   ctx = log.WithContext(ctx)
//
// Example log output
//
//   2021-05-04T07:40:01-07:00 TRC ListAllowlistIps d=565.021631 responses=0 success=true
package rockset
