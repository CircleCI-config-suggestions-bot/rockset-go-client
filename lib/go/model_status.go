/*
 * REST API
 *
 * Rockset's REST API allows for creating and managing all resources in Rockset. Each supported endpoint is documented below.  All requests must be authorized with a Rockset API key, which can be created in the [Rockset console](https://console.rockset.com). The API key must be provided as `ApiKey <api_key>` in the `Authorization` request header. For example: ``` Authorization: ApiKey aB35kDjg93J5nsf4GjwMeErAVd832F7ad4vhsW1S02kfZiab42sTsfW5Sxt25asT ```  All endpoints are only accessible via https.  Build something awesome!
 *
 * API version: v1
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package rockset

import (
	"bytes"
	"encoding/json"
	"fmt"
)

type Status struct {
	// Status of the Source's ingestion, one of: INITIALIZING, WATCHING, PROCESSING, COMPLETED, ERROR
	State string `json:"state,omitempty"`
	// ISO-8601 date when state was triggered
	Since string `json:"since,omitempty"`
	// state message
	Message string `json:"message,omitempty"`
	// ISO-8601 date when source was last processed
	LastProcessedAt string `json:"last_processed_at,omitempty"`
	// last source item processed by ingester
	LastProcessedItem string `json:"last_processed_item,omitempty"`
	// Total items processed of source
	TotalProcessedItems int64 `json:"total_processed_items,omitempty"`
	// ISO-8601 date when last error occurred
	LastErrorAt string `json:"last_error_at,omitempty"`
	// last source item that errored
	LastErrorItem string `json:"last_error_item,omitempty"`
	// reason for the last error
	LastErrorReason string `json:"last_error_reason,omitempty"`
	// Total items that errored
	TotalErrorItems int64 `json:"total_error_items,omitempty"`
}

func (m Status) PrintResponse() {
	r, err := json.Marshal(m)
	var out bytes.Buffer
	err = json.Indent(&out, []byte(string(r)), "", "    ")
	if err != nil {
		fmt.Println("error parsing string")
		return
	}

	fmt.Println(out.String())
}
